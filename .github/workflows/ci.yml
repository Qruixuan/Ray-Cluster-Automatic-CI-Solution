name: Ray-Cluster-Automatic-CI

on:
  push:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Kind
        uses: engineerd/setup-kind@v0.6.2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.0

      - name: Create kind cluster
        run: |
          kind create cluster --image=kindest/node:v1.26.0 --name test-cluster
          kubectl cluster-info
        
      - name: Add KubeRay Helm repo
        run: |
          helm repo add kuberay https://ray-project.github.io/kuberay-helm/
          helm repo update

      - name: Deploy kuberay
        run: |
          helm upgrade --install kuberay-operator kuberay/kuberay-operator --version 1.4.2 --namespace default --create-namespace
      
      - name: Wait for RayCluster CRD
        run: |
          for i in {1..20}; do
            kubectl get crd rayclusters.ray.io -o yaml | grep -A5 "version:" && break
            echo "Waiting for RayCluster CRD..."
            sleep 3
          done    

      - name: Add Prometheus Helm repo
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
      
      - name: Install/Upgrade kube-prometheus-stack
        run: |
          helm upgrade --install monitoring prometheus-community/kube-prometheus-stack \
            --namespace monitoring --create-namespace \
            --set grafana.enabled=false

      - name: Apply Ray Cluster
        run: kubectl apply -f ./k8s/ray-cluster.yaml

      - name: Apply PodMonitor
        run: kubectl apply -f ./k8s/podmonitor.yaml

      - name: Wait for Ray head Pod
        run: |
          CLUSTER_NAME="raycluster-test"
          NAMESPACE="default"
          for i in {1..20}; do
            HEAD_POD=$(kubectl get pods -l ray.io/cluster=${CLUSTER_NAME},ray.io/node-type=head \
                        -n ${NAMESPACE} -o jsonpath='{.items[0].metadata.name}')
            if [ -n "$HEAD_POD" ]; then
              echo "Head Pod found: $HEAD_POD"
              echo "HEAD_POD=$HEAD_POD" >> $GITHUB_ENV
              break
            fi
            echo "Waiting for head pod..."
            sleep 5
          done

      - name: Submit job
        run: |
          kubectl cp ./ray_metrics.py default/${{ env.HEAD_POD }}:/tmp/ray_metrics.py
          kubectl exec -n default ${{ env.HEAD_POD }} -- bash -c "python /tmp/ray_metrics.py &"

      - name: Port-forward Prometheus
        run: |
          kubectl port-forward -n monitoring svc/kube-prometheus-stack-prometheus 9090:9090 &
          sleep 10

      - name: Query PodMonitor metrics
        run: |
          echo "Ray Test Metric Report"
          echo "======================="
          for i in {1..10}; do
            VALUE=$(curl -s 'http://127.0.0.1:9090/api/v1/query?query=ray_test_metric' \
              | jq -r '.data.result[0].value[1]')
            echo "Sample $i: ray_test_metric = $VALUE"
            sleep 1
          done
          echo "======================="

      - name: Delete Kind cluster
        if: always()
        run: |
          kind delete cluster --name test-cluster
